/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package notepad;
import java.awt.*;
import java.awt.Component;
import java.awt.Image;
import java.awt.Font;
import javax.swing.JOptionPane;
import java.io.*;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author GAURAV-PC
 */
public class editor extends javax.swing.JFrame {
    String s1="",s2="";

    int i=1;
   


 // Image img1=(new ImageIcon(getClass().getResource("SDD.JPG"))).getImage();
    /**
     * Creates new form editor
     */
    public editor() {
        initComponents();
       
   
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel1 = new javax.swing.JLabel();
        row_label = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        col_label = new javax.swing.JLabel();
        menu_bar = new javax.swing.JMenuBar();
        mfile = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        mtab = new javax.swing.JMenuItem();
        miopen = new javax.swing.JMenuItem();
        misave = new javax.swing.JMenuItem();
        misave1 = new javax.swing.JMenuItem();
        miexit = new javax.swing.JMenuItem();
        medit = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        pbutton = new javax.swing.JMenuItem();
        mformat = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        lwrap = new javax.swing.JCheckBoxMenuItem();
        mtheme = new javax.swing.JMenu();
        grad = new javax.swing.JRadioButtonMenuItem();
        lrad = new javax.swing.JRadioButtonMenuItem();
        drad = new javax.swing.JRadioButtonMenuItem();
        brad = new javax.swing.JRadioButtonMenuItem();
        mabout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Skyline Editor");
        setBackground(new java.awt.Color(0, 0, 0));
        setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/notepad/SDD.jpg")).getImage());
        setSize(new java.awt.Dimension(1000, 1000));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTabbedPane1.setFocusCycleRoot(true);
        jTabbedPane1.setFont(new java.awt.Font("Yu Mincho", 1, 14)); // NOI18N
        jTabbedPane1.setName(""); // NOI18N
        jTabbedPane1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTabbedPane1ComponentAdded(evt);
            }
        });
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel1.setText(" Columns");

        row_label.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jLabel3.setText("Row");

        col_label.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N

        menu_bar.setBackground(new java.awt.Color(255, 255, 255));
        menu_bar.setBorder(null);

        mfile.setBackground(new java.awt.Color(255, 255, 255));
        mfile.setText("File");
        mfile.setFont(new java.awt.Font("Yu Mincho", 1, 14)); // NOI18N

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setFont(new java.awt.Font("Yu Mincho", 1, 14)); // NOI18N
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notepad/new.png"))); // NOI18N
        jMenuItem2.setText("New File");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        mfile.add(jMenuItem2);

        mtab.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        mtab.setFont(new java.awt.Font("Yu Mincho", 1, 14)); // NOI18N
        mtab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notepad/newt.png"))); // NOI18N
        mtab.setText("New Tab");
        mtab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtabActionPerformed(evt);
            }
        });
        mfile.add(mtab);

        miopen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        miopen.setFont(new java.awt.Font("Yu Mincho", 1, 14)); // NOI18N
        miopen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notepad/open.png"))); // NOI18N
        miopen.setText("Open");
        miopen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miopenActionPerformed(evt);
            }
        });
        mfile.add(miopen);

        misave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        misave.setFont(new java.awt.Font("Yu Mincho", 1, 14)); // NOI18N
        misave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notepad/save.png"))); // NOI18N
        misave.setText("Save");
        misave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                misaveActionPerformed(evt);
            }
        });
        mfile.add(misave);

        misave1.setFont(new java.awt.Font("Yu Mincho", 1, 14)); // NOI18N
        misave1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notepad/saveas.png"))); // NOI18N
        misave1.setText("Save As...");
        misave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                misave1ActionPerformed(evt);
            }
        });
        mfile.add(misave1);

        miexit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        miexit.setFont(new java.awt.Font("Yu Mincho", 1, 14)); // NOI18N
        miexit.setText("Exit");
        miexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miexitActionPerformed(evt);
            }
        });
        mfile.add(miexit);

        menu_bar.add(mfile);

        medit.setBackground(mfile.getBackground());
        medit.setForeground(mfile.getForeground());
        medit.setText("Edit");
        medit.setFont(mfile.getFont());

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(miopen.getFont());
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notepad/cut.png"))); // NOI18N
        jMenuItem1.setText("Cut");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        medit.add(jMenuItem1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setFont(miopen.getFont());
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notepad/copy.png"))); // NOI18N
        jMenuItem4.setText("Copy");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        medit.add(jMenuItem4);

        pbutton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        pbutton.setFont(miopen.getFont());
        pbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notepad/paste.png"))); // NOI18N
        pbutton.setText("Paste");
        pbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pbuttonActionPerformed(evt);
            }
        });
        medit.add(pbutton);

        menu_bar.add(medit);

        mformat.setBackground(mfile.getBackground());
        mformat.setForeground(mfile.getForeground());
        mformat.setText("Format");
        mformat.setFont(mfile.getFont());

        jMenuItem3.setFont(mfile.getFont());
        jMenuItem3.setText("Font");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        mformat.add(jMenuItem3);

        lwrap.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        lwrap.setFont(misave.getFont());
        lwrap.setText("Line Wrap");
        lwrap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lwrapActionPerformed(evt);
            }
        });
        mformat.add(lwrap);

        menu_bar.add(mformat);

        mtheme.setBackground(mfile.getBackground());
        mtheme.setForeground(mfile.getForeground());
        mtheme.setText("Theme");
        mtheme.setFont(mfile.getFont());

        buttonGroup1.add(grad);
        grad.setFont(miopen.getFont());
        grad.setText("Geek");
        grad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradActionPerformed(evt);
            }
        });
        mtheme.add(grad);

        buttonGroup1.add(lrad);
        lrad.setFont(miopen.getFont());
        lrad.setText("Light");
        lrad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lradActionPerformed(evt);
            }
        });
        mtheme.add(lrad);

        buttonGroup1.add(drad);
        drad.setFont(miopen.getFont());
        drad.setText("Dark");
        drad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dradActionPerformed(evt);
            }
        });
        mtheme.add(drad);

        buttonGroup1.add(brad);
        brad.setFont(miopen.getFont());
        brad.setSelected(true);
        brad.setText("Back to Normal");
        brad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bradActionPerformed(evt);
            }
        });
        mtheme.add(brad);

        menu_bar.add(mtheme);

        mabout.setBackground(mfile.getBackground());
        mabout.setForeground(mfile.getForeground());
        mabout.setText("About Us");
        mabout.setFont(mfile.getFont());
        mabout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maboutMouseClicked(evt);
            }
        });
        mabout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maboutActionPerformed(evt);
            }
        });
        menu_bar.add(mabout);

        setJMenuBar(menu_bar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 1111, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(col_label, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(row_label, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(col_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(row_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents




    @Override
    public void setGlassPane(Component cmpnt) {
        super.setGlassPane(cmpnt); //To change body of generated methods, choose Tools | Templates.
    }



    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
mtab.doClick();
       
    }//GEN-LAST:event_formWindowOpened

    private void miopenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miopenActionPerformed
        // TODO add your handling code here:
        Frame f=new Frame();
FileDialog fd=new FileDialog(f,"Open",FileDialog.LOAD);
 text t;
 
if((((JScrollPane)(jTabbedPane1.getComponentAt(jTabbedPane1.getComponentCount()-1))).getNextFocusableComponent()).getName()!=null)
{
mtab.doClick(); JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      t=(text) ti.getNextFocusableComponent();
 
}
else
{ JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      t=(text) ti.getNextFocusableComponent();
}
fd.setVisible(true);

String s3,s4 ="";
t.set(fd.getFile(),fd.getDirectory());
if(t.get_address()==null)
    jTabbedPane1.removeTabAt(jTabbedPane1.getTabCount()-1);

s3=t.get_address()+t.get_name();

 try(FileReader fr= new FileReader(s3))
 {
     int c;
 while((c=fr.read())!=-1)
 {
 s4=s4+(char)c;
 }

   t.setText(s4);
   
    if(t.get_name()!=null)
    jTabbedPane1.setTitleAt(jTabbedPane1.getTabCount()-1, t.get_name());
 }
 catch(Exception e)
 {
    JOptionPane.showMessageDialog(null, e.getMessage());
 }

    }//GEN-LAST:event_miopenActionPerformed

    private void misaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_misaveActionPerformed
        // TODO add your handling code here:
  JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text t=(text) ti.getNextFocusableComponent();
 if( t.get_name()!=null)
 {
   
 String s3,s4;
 s3=t.get_address()+t.get_name();

try(FileWriter fo=new FileWriter(s3))
{


s4=t.getText();
fo.write(s4);


}

catch(Exception e)
{
  JOptionPane.showMessageDialog(null, e.getMessage());
}

 }

 else{

 misave1.doClick();
 }


    }//GEN-LAST:event_misaveActionPerformed

    private void miexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miexitActionPerformed
        // TODO add your handling code here:
 
   
  
int j=jTabbedPane1.getTabCount();
j--;
while(j>=0)
{
//text t= (text) (jTabbedPane1.getComponentAt(j));
     JScrollPane ti=  (JScrollPane) jTabbedPane1.getComponentAt(j);
      text t=(text) ti.getNextFocusableComponent();
             if(t.get_name()!=null)
             {      
                  int a1= JOptionPane.showConfirmDialog(null,"Do you want to save the file  \""+t.get_name()+"\" ?");
                 if(a1==JOptionPane.YES_OPTION){
                  String s3,s4;
                    s3=t.get_address()+t.get_name();

                    try(FileWriter fo=new FileWriter(s3))
                    {
                   // JTextArea ti = (JTextArea) t.getNextFocusableComponent();
                        s4=t.getText();
                    fo.write(s4);

                    }

                    catch(Exception e)
                    {
                          JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                  
                 }
             }
             
             else
             {  
                 if(t.c=='a')
                 {
                 //jTabbedPane1.removeTabAt(j);
                 
                 }
             else{
                int a1= JOptionPane.showConfirmDialog(null,"Do you want to save the file \""+ jTabbedPane1.getTitleAt(j)+"\" ?");
                 if(a1==JOptionPane.YES_OPTION)
               { 
                  Frame f=new Frame();
                    FileDialog fd=new FileDialog(f,"Save",FileDialog.SAVE);
                    fd.setVisible(true);

                    String s3,s4;
                    if(fd.getFile()!=null){
                    t.set(fd.getFile(), fd.getDirectory());

                    s3=t.get_address()+t.get_name();


                    try(FileWriter fo=new FileWriter(s3))
                    {
                     //  JTextArea ti = (JTextArea) t.getNextFocusableComponent();
                        s4=t.getText();
                        fo.write(s4);
                        if(t.get_name()!=null)
                        jTabbedPane1.setTitleAt(jTabbedPane1.getSelectedIndex(), t.get_name());

                    }
                    catch(Exception e)
                    {
                     JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                    }
                      
                }
                 else
                 {
                   
                 }
              }
             j--;
             }
             j--;
             
 }
System.exit(0);
   
    }//GEN-LAST:event_miexitActionPerformed

    private void maboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maboutActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_maboutActionPerformed

    private void maboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maboutMouseClicked
        // TODO add your handling code here:

     new about().setVisible(true);


    }//GEN-LAST:event_maboutMouseClicked

    private void pbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pbuttonActionPerformed
        // TODO add your handling code here:
   JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text tarea=(text) ti.getNextFocusableComponent();
        s2=tarea.getText();
   tarea.setText(s2+s1);
//pbutton.setEnabled(false);
    }//GEN-LAST:event_pbuttonActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
       JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text tarea=(text) ti.getNextFocusableComponent();
      s1=tarea.getSelectedText();
//pbutton.setEnabled(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
  JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text tarea=(text) ti.getNextFocusableComponent();
        s1=tarea.getSelectedText();

        s2=tarea.getText();
 tarea.setText(s2.replace(s1,""));
/// pbutton.setEnabled(true);
        // tarea.setText();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void lwrapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lwrapActionPerformed
        // TODO add your handling code here:
      JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text tarea=(text) ti.getNextFocusableComponent();
        if(lwrap.isSelected())
        {
            tarea.setLineWrap(true);
        }
        else
        {
         tarea.setLineWrap(false);
        }
    }//GEN-LAST:event_lwrapActionPerformed

    private void gradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradActionPerformed
        // TODO add your handling code here:
    JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text tarea=(text) ti.getNextFocusableComponent();
        if(grad.isSelected())
       {
               mfile.setBackground(Color.BLACK);
               mfile.setForeground(Color.GREEN);
                  medit.setBackground(Color.BLACK);
               medit.setForeground(Color.GREEN);
                  mformat.setBackground(Color.BLACK);
               mformat.setForeground(Color.GREEN);
                  mtheme.setBackground(Color.BLACK);
               mtheme.setForeground(Color.GREEN);
                  mabout.setBackground(Color.BLACK);
               mabout.setForeground(Color.GREEN);
           tarea.setBackground(Color.BLACK);
               tarea.setForeground(Color.GREEN);

       }
    }//GEN-LAST:event_gradActionPerformed

    private void lradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lradActionPerformed
        // TODO add your handling code here:.
        JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text tarea=(text) ti.getNextFocusableComponent();
        if(lrad.isSelected())
        {
                  mfile.setBackground(Color.YELLOW);
               mfile.setForeground(Color.BLUE);
                  medit.setBackground(Color.YELLOW);
               medit.setForeground(Color.BLUE);
                  mformat.setBackground(Color.YELLOW);
               mformat.setForeground(Color.BLUE);
                  mtheme.setBackground(Color.YELLOW);
               mtheme.setForeground(Color.BLUE);
                  mabout.setBackground(Color.YELLOW);
               mabout.setForeground(Color.BLUE);
                 tarea.setBackground(Color.YELLOW);
               tarea.setForeground(Color.BLUE);
        }
    }//GEN-LAST:event_lradActionPerformed

    private void dradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dradActionPerformed
        // TODO add your handling code here:
         JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text tarea=(text) ti.getNextFocusableComponent();
             if(drad.isSelected())
        {
                  mfile.setBackground(Color.DARK_GRAY);
               mfile.setForeground(Color.BLUE);
                  medit.setBackground(Color.DARK_GRAY);
               medit.setForeground(Color.BLUE);
                  mformat.setBackground(Color.DARK_GRAY);
               mformat.setForeground(Color.BLUE);
                  mtheme.setBackground(Color.DARK_GRAY);
               mtheme.setForeground(Color.BLUE);
                  mabout.setBackground(Color.DARK_GRAY);
               mabout.setForeground(Color.BLUE);
                 tarea.setBackground(Color.DARK_GRAY);
               tarea.setForeground(Color.BLUE);
        }
    }//GEN-LAST:event_dradActionPerformed

    private void bradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bradActionPerformed
        // TODO add your handling code here:
         JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text tarea=(text) ti.getNextFocusableComponent();
           if(brad.isSelected())
        {
                  mfile.setBackground(Color.WHITE);
               mfile.setForeground(Color.BLACK);
                  medit.setBackground(Color.WHITE);
               medit.setForeground(Color.BLACK);
                  mformat.setBackground(Color.WHITE);
               mformat.setForeground(Color.BLACK);
                  mtheme.setBackground(Color.WHITE);
               mtheme.setForeground(Color.BLACK);
                  mabout.setBackground(Color.WHITE);
               mabout.setForeground(Color.BLACK);
                 tarea.setBackground(Color.WHITE);
               tarea.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_bradActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      JTextArea t=(JTextArea) ti.getNextFocusableComponent();
      if(t.getName()!=null)
      {
      int a= JOptionPane.showConfirmDialog(null,"Do yo want to save the file ?");
      if(a==JOptionPane.YES_OPTION)
          misave.doClick();
       t.setText("");
       jTabbedPane1.setTitleAt(jTabbedPane1.getSelectedIndex(),"new tab");
         
      }
      else
      {
      t.setText("");
      }
      

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void misave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_misave1ActionPerformed
        // TODO add your handling code here:
        Frame f=new Frame();
FileDialog fd=new FileDialog(f,"Save",FileDialog.SAVE);

fd.setVisible(true);
 JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text t=(text) ti.getNextFocusableComponent();
String s3,s4;
if(fd.getFile()!=null)
{
t.set(fd.getFile(), fd.getDirectory());

s3=t.get_address()+t.get_name();


try(FileWriter fo=new FileWriter(s3))
{

BufferedWriter bos = new BufferedWriter(fo);
s4=t.getText();


BufferedReader bis= new BufferedReader(new FileReader(s3));
String e="";
while ((e=bis.readLine())!=null)
{
bos.write(e);
}
bos.flush();
bos.close();
fo.close();

if(t.get_name()!=null)
    jTabbedPane1.setTitleAt(jTabbedPane1.getSelectedIndex(), t.get_name());

}
catch(Exception e)
{
  JOptionPane.showMessageDialog(null, e.getMessage());
}
}

    }//GEN-LAST:event_misave1ActionPerformed

    private void mtabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtabActionPerformed
        // TODO add your handling code here:
JScrollPane s= new JScrollPane();
text n=new text();
s.setViewportView(n);
s.setNextFocusableComponent(n);
        jTabbedPane1.add("Tab"+i,s);
       i++;
    }//GEN-LAST:event_mtabActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
       miexit.doClick();
    }//GEN-LAST:event_formWindowClosing

    private void jTabbedPane1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentAdded
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jTabbedPane1ComponentAdded

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
          JScrollPane ti=  (JScrollPane) jTabbedPane1.getSelectedComponent();
      text t=(text) ti.getNextFocusableComponent();
    new font_frame(t).setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
       
        col_label.setText("");
        row_label.setText("");
        if(grad.isSelected())
        {
        grad.doClick();
        grad.doClick();
        }
        else  if(lrad.isSelected())
        {
        lrad.doClick();
        lrad.doClick();
        }
        else  if(drad.isSelected())
        {
        drad.doClick();
        drad.doClick();
        }
        else
        {
         brad.doClick();
        brad.doClick();
        }
        
         if(lwrap.isSelected())
        {
        lwrap.doClick();
        lwrap.doClick();
        }
        
    }//GEN-LAST:event_jTabbedPane1StateChanged


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButtonMenuItem brad;
    private javax.swing.ButtonGroup buttonGroup1;
    public static javax.swing.JLabel col_label;
    private javax.swing.JRadioButtonMenuItem drad;
    private javax.swing.JRadioButtonMenuItem grad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButtonMenuItem lrad;
    private javax.swing.JCheckBoxMenuItem lwrap;
    private javax.swing.JMenu mabout;
    private javax.swing.JMenu medit;
    private javax.swing.JMenuBar menu_bar;
    private javax.swing.JMenu mfile;
    private javax.swing.JMenu mformat;
    private javax.swing.JMenuItem miexit;
    private javax.swing.JMenuItem miopen;
    private javax.swing.JMenuItem misave;
    private javax.swing.JMenuItem misave1;
    private javax.swing.JMenuItem mtab;
    private javax.swing.JMenu mtheme;
    private javax.swing.JMenuItem pbutton;
    public static javax.swing.JLabel row_label;
    // End of variables declaration//GEN-END:variables

    private void setIconImages(Image img) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
